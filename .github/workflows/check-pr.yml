name: PR Build & Test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    #- name: Install E2E Dependencies
    #  if: ${{ matrix.os == 'ubuntu-latest' }}
    #  run: |
    #    sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
    #    sudo apt-get update -y -qq
    #    sudo apt-get install libsdl2-dev
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Restore tools
      run: dotnet tool restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Unit Tests
      if: ${{ matrix.os != 'windows-latest' }}
      run: dotnet test --configuration Release --no-build --verbosity normal --filter "Category!=E2E" --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Unit Tests & E2E Tests
      if: ${{ matrix.os == 'windows-latest' }}
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Merge Test Results
      if: ${{ matrix.os == 'windows-latest' }}
      run: dotnet dotnet-coverage merge -f cobertura -r -o coverage/coverage.cobertura.xml coverage
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.10
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        reports: 'coverage/coverage.cobertura.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: 'CoverageReports' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;MarkdownSummary;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
        sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
        historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
        plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
        assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: '' # Optional title.
        tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
        customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
        toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.
    - uses: actions/upload-artifact@v3
      name: Upload Artifacts
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        name: CoverageReports
        path: CoverageReports/
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ github.event_name == 'pull_request' && matrix.os == 'windows-latest' }}
      with:
        recreate: true
        path: CoverageReports\Summary.md